@mixin center-vertically {
  position: absolute;
  top: 50%;
  left: 50%;
  @include prefix(transform, translate(-50%, -50%), 'webkit' 'moz' 'o' 'ms');
}


/*Mixin for form input-placeholders*/

@mixin optional-at-root($sel) {
  @at-root #{if(not &, $sel, selector-append(&, $sel))} {
    @content;
  }
}

@mixin placeholder {
  @include optional-at-root('::-webkit-input-placeholder') {
    @content;
  }
  @include optional-at-root(':-moz-placeholder') {
    @content;
  }
  @include optional-at-root('::-o-placeholder') {
    @content;
  }
  @include optional-at-root(':-ms-input-placeholder') {
    @content;
  }
}


/*Verticle-align  Mixin*/

@mixin vertical-align($position: relative) {
  position: $position;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

/*padding mixin*/ 

@mixin padding-all($top, $right, $bottom, $left) {
  padding-top: $top;
  padding-right: $right;
  padding-bottom: $bottom;
  padding-left: $left;
}

@mixin position-center($position: absolute){
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

/*margin mixin*/

@mixin margin-all($top, $right, $bottom, $left) {
  padding-top: $top;
  padding-right: $right;
  padding-bottom: $bottom;
  padding-left: $left;
}

/*box-shadow*/

@mixin box-shadow( $horiz: 1px, $vert: 1px, $blur: 1px, $spread: -1px, $color: rgba(0, 0, 0, 0.75)) {

  -webkit-box-shadow: $horiz $vert $blur $spread $color;
  -moz-box-shadow: $horiz $vert $blur $spread $color;
  box-shadow: $horiz $vert $blur $spread $color;
}

@mixin transition-bg( $tertiary-color){

  @include prefix(transition, background-color 2s ease-out, webkit moz o ms);
  
}

/// Mixin to prefix a property
/// @author Hugo Giraudel
/// @param {String} $property - Property name
/// @param {*} $value - Property value
/// @param {List} $prefixes (()) - List of prefixes to print

@mixin prefix($property, $value, $prefixes: ()) {
  @each $prefix in $prefixes {
    #{'-' + $prefix + '-' + $property}: $value;
  }
 
  // Output standard non-prefixed declaration usage e.g. ".selector   @include prefix(transform, rotate(45deg), webkit moz o ms);" //
  #{$property}: $value;
  
}

//*opacity*// 

@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity = $opacity-ie); //IE8
}

//Center a block element*//

@mixin center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

//*custom breakpoints*//

@mixin screen($size) {
  $desktop: "(min-width: 1024px)";
  $tablet: "(min-width: 768px) and (max-width: 1023px)";
  $mobile: "(max-width: 767px)";

  @if $size == desktop {
    @media only screen and #{$desktop} {
      @content;
    }
  }

  @else if $size == tablet {
    @media only screen and #{$tablet} {
      @content;
    }
  }

  @else if $size == mobile {
    @media only screen and #{$mobile} {
      @content;
    }
  }

  @else {
    @media only screen and #{$size} {
      @content;
    }
  }
}